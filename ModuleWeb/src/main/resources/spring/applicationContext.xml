<?xml version="1.0" encoding="UTF-8" ?>
<!--
    默认无需加前缀的命名空间，比如<bean>
    xsi:schemaLocation 为 xsi 的属性，给出了多个uri，用空格和换行分隔
    格式：
    第一个uri是定义的 XML Namespace 的值
    第二个uri给出Schema文档的位置，Schema处理器将从这个位置读取Schema文档，
    该文档的targetNamespace必须与第一个URI相匹配
    从本质上来说，第一个为目录，第二个为目录下的其中一个具体的文件
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:Context="http://www.springframework.org/schema/context"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!--TODO：命名空间-->

    <Context:component-scan base-package="soundSystem"/>
    <Context:component-scan base-package="mySystem"/>
    <!--如果不加这条，但是springmvc的配置文件里有，也能跑起来，
        相反跑不起来，controller不能被加入到上下文-->
    <Context:component-scan base-package="com"/>

    <!--<bean id="compactDisc" class="soundSystem.impl.SgtPeppers"/>-->
    <!--<bean id="cdPlayer" class="soundSystem.impl.CDPlayer"-->
          <!--c:cd-ref="compactDisc"/>-->
    <!--<bean id="cdPlayer" class="soundSystem.impl.CDPlayer">-->
        <!--<constructor-arg ref="compactDisc"/>-->
    <!--</bean>-->

    <bean id="hello" class="mySystem.impl.SayHelloImpl"/>

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>

    <bean id="datasource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.drivers}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="userInfoDaoImpl"
          class="com.ossic.db.dao.impl.UserInfoDaoImpl">
        <property name="dataSource" ref="datasource"/>
    </bean>




</beans>